레퍼런스변수
배열 클래스 


//String 타입 변수 저장할 수 있는 하나의 레퍼런스 변수생성 후 좋아하는 음료수 3개
		String []drink = {"솔의눈", "아침햇살", "실론티"};
		//나예호 출력
		System.out.println(stu[0].getName());


객체배열쓰는법  mainStudentScore에있음

배열의 가장큰 단점 : 설정된다면  크기를 다시 바꿀 수 없다
//ArrayList    //가변배열이라고 부름
//음료수 이름을 갖고 있는 3칸짜리 배열

제네릭 =   <> 를 제네릭이라고 하고  제네릭안에는 클래스 이름이 들어갈 수 있음 

ArrayList는 메모리를 배열보다 더 잡아먹어서 각각의 장단점이 있음
가변배열은 중간에 끼워넣을수 있음 (중간에 넣으면 한칸씩 밀림)

		for(int i=0; i<snack.size(); i++) {
			System.out.println(snack.get(i));
		}

		//첵스파맛을 없애고 싶어!
		snack.remove(2);
		//전체 지우려면 
		snack.clear();

d1119
Collection
컬렉션에서 arraylist랑 linkedhashmap 정도 사용함

Map은 키값과 속성값이 있다고 생각해(나중에 함)
String은 <>  제네릭 안에 쓸 수 있음 (기본데이터가 아니라서)

int 쓰고 싶으면 integer라는 wrapper클래스써야함?

자바1.8 이상엔 <> 공백해도됨
즉  ArrayList <String> list = new ArrayList<>();
ArrayList <String> list = new ArrayList<String>();

refactor(source탭아래있음) - extract method 하면  블록친부분 메소드화 가능

자바익스플로러에서 java build path - libraries

mp3.play(list.get(0).getPath());
// 제네릭 > 객체번호써주고 > 그다음에 메소드까지 .뒤에 적을 수 있다